/**
 * @author Brayan Fuentes and Curtis Nishihira
 * Date: April 9, 2020
 * Purpose: Insert all the words from Alice in Wonderland into a treeset and record how much time it took to search for a word 100 times. 
 * Input: No user input 
 * Output: Prints onto the console the words in the book in no certain order and the time it took for it to load into the treemap and the time it took to search for a certain word 100 times
 */

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.TreeSet;

public class Treeset1 {
	public static void main(String[] args)
	{
		long time1,time2,time3,time4;
		try 
		{
			time1 = System.currentTimeMillis();
			String line;
			TreeSet<String> book = new TreeSet<String>();
			BufferedReader reader = new BufferedReader(new FileReader("Alice.txt"));
			//loops through until there isn't a line left to read
			while((line = reader.readLine()) != null )
			{
				//splits the line into seperate parts and puts them into an array. Then it add the array into the treeset
				String[] parts = line.split(" ");
				book.addAll(Arrays.asList(parts));
			}
			//loops through the treeset and prints each element
			for(String word : book)
			{
				System.out.println(word);
			}
			
			time2 = System.currentTimeMillis();
			reader.close();
			System.out.println("Elapsed time for loading hash set: " + (time2-time1) + " milliseconds");
			time3 = System.nanoTime();
			//looks for the word "Cheshire" a 100 times and then printing onto the console how long it took in nano-seconds
			for(int i = 0; i<100;i++)
			{
				book.contains("Cheshire");
			}
			time4 = System.nanoTime();
			System.out.println("Elapsed time for searching hash set: " + (time4-time3) + " nano-seconds");
		}
		catch(IOException e)
		{
			System.out.println("Something went wrong.");
		}
		
	}
}
